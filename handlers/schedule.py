from telegram import Update
from telegram.ext import MessageHandler, filters, CallbackContext
from services.decorators import student_required
from services.parser import parser
from services.schedule_generator import generate_schedule_image
import logging
from io import BytesIO

logger = logging.getLogger(__name__)

@student_required
async def handle_schedule(update: Update, context: CallbackContext):
    try:
        logger.info("–í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è handle_schedule")
        schedule_id = context.user_data.get('schedule_id')
        if not schedule_id:
            logger.warning("schedule_id –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ user_data")
            await update.message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à—É –≥—Ä—É–ø–ø—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        schedule = await parser.parse_schedule(schedule_id)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {schedule}")
        if not schedule:
            logger.warning("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            await update.message.reply_text("‚ö†Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        image_buffers = generate_schedule_image(schedule, days_limit=7)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        for idx, image_buffer in enumerate(image_buffers, 1):
            await context.bot.send_photo(
                chat_id=update.effective_chat.id,
                photo=image_buffer,
                caption=f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã {context.user_data.get('group_name', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø—ã')} (–ß–∞—Å—Ç—å {idx})"
            )
            image_buffer.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—É—Ñ–µ—Ä –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏

    except Exception as e:
        logger.error(f"Schedule error: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.")

def setup_schedule_handlers(app):
    app.add_handler(MessageHandler(
        filters.Regex(r'üìÖ\s*–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ'),
        handle_schedule
    ))