from functools import wraps
from telegram import Update
from telegram.ext import CallbackContext
import logging

logger = logging.getLogger(__name__)

def student_required(func):
    @wraps(func)
    async def wrapper(update: Update, context: CallbackContext, *args, **kwargs):
        logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ student_required –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {update.effective_user.id}")
        logger.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ user_data: {context.user_data}")
        
        if not context.user_data.get('authenticated'):
            logger.warning("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
            await update.message.reply_text("üîí –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
            return
        if context.user_data.get('role_id') != 3:  # 3 - —Ä–æ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
            logger.warning(f"–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {context.user_data.get('role_id')}, –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω")
            await update.message.reply_text("üö´ –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")
            return
        
        logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–π–¥–µ–Ω–∞, –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é")
        return await func(update, context, *args, **kwargs)
    return wrapper